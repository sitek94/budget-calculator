{"version":3,"sources":["components/layout.tsx","utils.ts","components/display.tsx","components/form.tsx","components/list.tsx","components/label.tsx","app.tsx","index.tsx"],"names":["Top","children","className","Middle","Bottom","Layout","currencyFormat","number","Intl","NumberFormat","style","currency","format","percentFormat","Number","toLocaleString","undefined","minimumFractionDigits","sum","array","reduce","a","b","Display","income","expenses","month","Date","year","getFullYear","budget","budgetSign","percentage","Math","abs","Form","onSubmit","descriptionRef","React","type","setType","description","setDescription","value","setValue","isButtonDisabled","data-testid","e","preventDefault","current","id","nanoid","focus","aria-label","onChange","currentTarget","placeholder","ref","required","disabled","List","list","onDeleteClick","renderPercentage","renderValue","map","onClick","Label","initialTransactions","App","transactions","setTransactions","removeTransaction","transactionId","filter","t","incomeList","expensesList","newTransaction","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2899b33f.chunk.js","sourcesContent":["import './layout.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction Layout({ children }: Props) {\r\n  return <div className=\"layout\">{children}</div>;\r\n}\r\n\r\nfunction Top({ children }: Props) {\r\n  return <div className=\"top\">{children}</div>;\r\n}\r\n\r\nfunction Middle({ children }: Props) {\r\n  return <div className=\"middle\">{children}</div>;\r\n}\r\n\r\nfunction Bottom({ children }: Props) {\r\n  return <div className=\"bottom\">{children}</div>;\r\n}\r\n\r\nexport default Layout;\r\nexport { Top, Middle, Bottom };\r\n","export function currencyFormat(number: number) {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(number);\r\n}\r\n\r\nexport function percentFormat(number: number) {\r\n  return Number(number).toLocaleString(undefined, {\r\n    style: 'percent',\r\n    minimumFractionDigits: 0,\r\n  });\r\n}\r\n\r\nexport function sum(array: number[]) {\r\n  return array.reduce((a, b) => a + b, 0);\r\n}\r\n","import './display.scss';\r\nimport { currencyFormat, percentFormat } from 'utils';\r\n\r\ntype DisplayProps = {\r\n  income: number;\r\n  expenses: number;\r\n};\r\n\r\nfunction Display({ income, expenses }: DisplayProps) {\r\n  const month = new Date().toLocaleString('default', { month: 'long' });\r\n  const year = new Date().getFullYear();\r\n\r\n  const budget = income - expenses;\r\n  const budgetSign = budget > 0 ? '+ ' : budget < 0 ? '- ' : '';\r\n  const percentage = budget > 0 ? percentFormat(expenses / income) : null;\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <h2 className=\"display__title\">\r\n        Budget available in {month} {year}:\r\n      </h2>\r\n      <h1 className=\"display__budget\">\r\n        {budgetSign}\r\n        {currencyFormat(Math.abs(budget))}\r\n      </h1>\r\n\r\n      <div className=\"display__income display__item\">\r\n        <div className=\"display__item__label\">Income</div>\r\n        <div className=\"display__item__right-box\">\r\n          <div className=\"value\">+ {currencyFormat(income)}</div>\r\n          <div className=\"percentage\">&nbsp;</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"display__expenses display__item\">\r\n        <div className=\"display__item__label\">Expenses</div>\r\n        <div className=\"display__item__right-box\">\r\n          <div className=\"value\">- {currencyFormat(expenses)}</div>\r\n          <div className=\"percentage\">{percentage || '---'}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import * as React from 'react';\r\nimport { BsPlusCircle as PlusIcon } from 'react-icons/bs';\r\nimport { TransactionType } from 'types';\r\nimport { nanoid } from 'nanoid';\r\nimport './form.scss';\r\n\r\ntype FormProps = {\r\n  onSubmit: ({ type, description, value }: TransactionType) => void;\r\n};\r\n\r\nfunction Form({ onSubmit }: FormProps) {\r\n  const descriptionRef = React.useRef<HTMLInputElement | null>(null);\r\n  const [type, setType] = React.useState('income');\r\n  const [description, setDescription] = React.useState('');\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!descriptionRef.current) return;\r\n\r\n    // Submit the form\r\n    onSubmit({\r\n      id: nanoid(),\r\n      type,\r\n      description,\r\n      value: Number(value),\r\n    } as TransactionType);\r\n\r\n    // Reset form values and set focus on description\r\n    setDescription('');\r\n    setValue('');\r\n    descriptionRef.current.focus();\r\n  };\r\n\r\n  const isButtonDisabled = description === '' || value === '';\r\n\r\n  return (\r\n    <form data-testid=\"form\" className=\"add-form\" onSubmit={handleSubmit}>\r\n      <select\r\n        aria-label=\"select type\"\r\n        className=\"form-control type\"\r\n        value={type}\r\n        onChange={(e) => setType(e.currentTarget.value)}\r\n      >\r\n        <option aria-label=\"income\" value=\"income\">\r\n          ➕\r\n        </option>\r\n        <option aria-label=\"expense\" value=\"expense\">\r\n          ➖\r\n        </option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control description\"\r\n        placeholder=\"Add description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.currentTarget.value)}\r\n        ref={descriptionRef}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        className=\"form-control value\"\r\n        placeholder=\"Value\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        required\r\n      />\r\n\r\n      <button\r\n        aria-label=\"submit\"\r\n        type=\"submit\"\r\n        className=\"btn submit-btn\"\r\n        disabled={isButtonDisabled}\r\n      >\r\n        <PlusIcon />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { BsXCircle as CrossIcon } from 'react-icons/bs';\r\nimport { TransactionType } from 'types';\r\nimport { currencyFormat, percentFormat } from 'utils';\r\nimport './list.scss';\r\n\r\ntype Props = {\r\n  list: TransactionType[];\r\n  type: 'income' | 'expenses';\r\n  income?: number;\r\n  onDeleteClick: (id: TransactionType['id']) => void;\r\n};\r\n\r\nfunction List({ list, type, income, onDeleteClick }: Props) {\r\n  // Render `percentage` if there is `income` prop\r\n  const renderPercentage = (value: number) =>\r\n    income !== undefined ? (\r\n      <div className=\"percentage\">\r\n        {income === 0 ? '---' : percentFormat(value / income)}\r\n      </div>\r\n    ) : null;\r\n\r\n  // Render `value` with relevant sign\r\n  const renderValue = (value: number) => (\r\n    <div className=\"value\">\r\n      {type === 'income' ? '+ ' : '- '}\r\n      {currencyFormat(value)}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {list.map(({ id, description, value }) => (\r\n        <li key={id} className=\"item\">\r\n          <div className=\"description\">{description}</div>\r\n          <div className=\"right-box\">\r\n            {renderValue(value)}\r\n            {renderPercentage(value)}\r\n            <button\r\n              className=\"btn delete-btn\"\r\n              onClick={() => onDeleteClick(id)}\r\n            >\r\n              <CrossIcon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import './label.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction Label({ children }: Props) {\r\n  return <h3 className=\"label\">{children}</h3>;\r\n}\r\n\r\nexport default Label;\r\n","import * as React from 'react';\r\nimport { TransactionList, TransactionType } from 'types';\r\nimport Layout, { Top, Middle, Bottom } from 'components/layout';\r\nimport Display from 'components/display';\r\nimport Form from 'components/form';\r\nimport List from 'components/list';\r\nimport Label from 'components/label';\r\nimport { sum } from 'utils';\r\n\r\nconst initialTransactions: TransactionType[] = [\r\n  { id: '1', type: 'income', description: 'Salary', value: 1000 },\r\n  { id: '2', type: 'income', description: 'Lottery', value: 1000 },\r\n  { id: '3', type: 'expense', description: 'Party', value: 500 },\r\n  { id: '4', type: 'expense', description: 'Cyberpunk', value: 500 },\r\n];\r\n\r\nfunction App() {\r\n  const [transactions, setTransactions] = React.useState<TransactionList>(\r\n    initialTransactions\r\n  );\r\n\r\n  const addTransaction = (newTransaction: TransactionType) => {\r\n    setTransactions(transactions.concat(newTransaction));\r\n  };\r\n  const removeTransaction = (transactionId: TransactionType['id']) => {\r\n    setTransactions(transactions.filter((t) => t.id !== transactionId));\r\n  };\r\n\r\n  const incomeList = transactions.filter((t) => t.type === 'income');\r\n  const expensesList = transactions.filter((t) => t.type === 'expense');\r\n\r\n  const income = sum(incomeList.map((t) => t.value));\r\n  const expenses = sum(expensesList.map((t) => t.value));\r\n\r\n  return (\r\n    <Layout>\r\n      <Top>\r\n        <Display income={income} expenses={expenses} />\r\n      </Top>\r\n\r\n      <Middle>\r\n        <Form onSubmit={addTransaction} />\r\n      </Middle>\r\n\r\n      <Bottom>\r\n        <div className=\"income\">\r\n          <Label>Income</Label>\r\n          <List\r\n            type=\"income\"\r\n            list={incomeList}\r\n            onDeleteClick={removeTransaction}\r\n          />\r\n        </div>\r\n        <div className=\"expenses\">\r\n          <Label>Expenses</Label>\r\n          <List\r\n            type=\"expenses\"\r\n            list={expensesList}\r\n            income={income}\r\n            onDeleteClick={removeTransaction}\r\n          />\r\n        </div>\r\n      </Bottom>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from 'app';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}