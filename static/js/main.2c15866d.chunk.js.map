{"version":3,"sources":["components/layout.tsx","utils.ts","components/display/display.tsx","components/form/form.tsx","components/transaction-list/transaction-item/transaction-item.tsx","components/transaction-list/transaction-list.tsx","components/label.tsx","app.tsx","index.tsx"],"names":["Top","children","className","Middle","Bottom","Layout","currencyFormat","number","Intl","NumberFormat","style","currency","format","sum","array","reduce","a","b","Display","income","expenses","budget","expensesPercentage","Title","Budget","value","Income","Expenses","percentage","month","Date","toLocaleString","year","getFullYear","sign","Math","abs","Number","undefined","minimumFractionDigits","Form","onSubmit","descriptionRef","React","type","setType","description","setDescription","setValue","isButtonDisabled","data-testid","e","preventDefault","current","id","nanoid","focus","aria-label","onChange","currentTarget","placeholder","ref","required","disabled","TransactionItem","onDeleteClick","onClick","TransactionList","list","map","Label","initialTransactions","App","transactions","setTransactions","removeTransaction","transactionId","filter","t","incomeList","expensesList","newTransaction","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c15866d.chunk.js","sourcesContent":["import './layout.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction Layout({ children }: Props) {\r\n  return <div className=\"layout\">{children}</div>;\r\n}\r\n\r\nfunction Top({ children }: Props) {\r\n  return <div className=\"top\">{children}</div>;\r\n}\r\n\r\nfunction Middle({ children }: Props) {\r\n  return <div className=\"middle\">{children}</div>;\r\n}\r\n\r\nfunction Bottom({ children }: Props) {\r\n  return <div className=\"bottom\">{children}</div>;\r\n}\r\n\r\nexport default Layout;\r\nexport { Top, Middle, Bottom };\r\n","export function currencyFormat(number: number) {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(number);\r\n}\r\n\r\nexport function percentFormat(number: number) {\r\n  if (number <= 0) return '---';\r\n\r\n  return Number(number).toLocaleString(undefined, {\r\n    style: 'percent',\r\n    minimumFractionDigits: 0,\r\n  });\r\n}\r\n\r\nexport function sum(array: number[]) {\r\n  return array.reduce((a, b) => a + b, 0);\r\n}\r\n","import { IncomeType, ExpensesType, BudgetType, PercentageType } from 'types';\r\nimport { currencyFormat, percentFormat } from 'utils';\r\nimport './display.scss';\r\n\r\ntype Props = {\r\n  income: IncomeType;\r\n  expenses: IncomeType;\r\n};\r\n\r\nfunction Display({ income, expenses }: Props) {\r\n  const budget = income - expenses;\r\n  const expensesPercentage = income !== 0 ? expenses / income : 0;\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <Title />\r\n      <Budget value={budget} />\r\n      <Income value={income} />\r\n      <Expenses value={expenses} percentage={expensesPercentage} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Title\r\nfunction Title() {\r\n  const month = new Date().toLocaleString('default', { month: 'long' });\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <h2 className=\"title\">\r\n      Budget available in {month} {year}:\r\n    </h2>\r\n  );\r\n}\r\n\r\n// Budget\r\nfunction Budget({ value }: { value: BudgetType }) {\r\n  const sign = value > 0 ? '+ ' : value < 0 ? '- ' : '';\r\n\r\n  return (\r\n    <h1 className=\"budget\">\r\n      {sign}\r\n      {currencyFormat(Math.abs(value))}\r\n    </h1>\r\n  );\r\n}\r\n\r\n// Income\r\nfunction Income({ value }: { value: IncomeType }) {\r\n  return (\r\n    <div className=\"income\">\r\n      <div className=\"text\">Income</div>\r\n      <div className=\"value\">\r\n        {value === 0 ? '' : '+ '}\r\n        {currencyFormat(value)}\r\n      </div>\r\n      <div className=\"percentage hidden\">&nbsp;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Expenses\r\nfunction Expenses({\r\n  value,\r\n  percentage,\r\n}: {\r\n  value: ExpensesType;\r\n  percentage: PercentageType;\r\n}) {\r\n  return (\r\n    <div className=\"expenses\">\r\n      <div className=\"text\">Expenses</div>\r\n      <div className=\"value\">\r\n        {value === 0 ? '' : '- '}\r\n        {currencyFormat(value)}\r\n      </div>\r\n      <div className=\"percentage\">{percentFormat(percentage)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Display };\r\n","import * as React from 'react';\r\nimport { BsPlusCircle as PlusIcon } from 'react-icons/bs';\r\nimport { Transaction } from 'types';\r\nimport { nanoid } from 'nanoid';\r\nimport './form.scss';\r\n\r\ntype FormProps = {\r\n  onSubmit: ({ type, description, value }: Transaction) => void;\r\n};\r\n\r\nfunction Form({ onSubmit }: FormProps) {\r\n  const descriptionRef = React.useRef<HTMLInputElement | null>(null);\r\n  const [type, setType] = React.useState('income');\r\n  const [description, setDescription] = React.useState('');\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!descriptionRef.current) return;\r\n\r\n    // Submit the form\r\n    onSubmit({\r\n      id: nanoid(),\r\n      type,\r\n      description,\r\n      value: Number(value),\r\n    } as Transaction);\r\n\r\n    // Reset form values and set focus on description\r\n    setDescription('');\r\n    setValue('');\r\n    descriptionRef.current.focus();\r\n  };\r\n\r\n  const isButtonDisabled = description === '' || value === '';\r\n\r\n  return (\r\n    <form data-testid=\"form\" className=\"add-form\" onSubmit={handleSubmit}>\r\n      <select\r\n        aria-label=\"select type\"\r\n        className=\"form-control type\"\r\n        value={type}\r\n        onChange={(e) => setType(e.currentTarget.value)}\r\n      >\r\n        <option aria-label=\"income\" value=\"income\">\r\n          ➕\r\n        </option>\r\n        <option aria-label=\"expense\" value=\"expense\">\r\n          ➖\r\n        </option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control description\"\r\n        placeholder=\"Add description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.currentTarget.value)}\r\n        ref={descriptionRef}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        className=\"form-control value\"\r\n        placeholder=\"Value\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        required\r\n      />\r\n\r\n      <button\r\n        aria-label=\"submit\"\r\n        type=\"submit\"\r\n        className=\"btn submit-btn\"\r\n        disabled={isButtonDisabled}\r\n      >\r\n        <PlusIcon />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Form };\r\n","import { BsXCircle as CrossIcon } from 'react-icons/bs';\r\nimport { TransactionItemProps } from 'types';\r\nimport { currencyFormat } from 'utils';\r\nimport './transaction-item.scss';\r\n\r\nfunction TransactionItem({\r\n  id,\r\n  type,\r\n  description,\r\n  value,\r\n  onDeleteClick,\r\n}: TransactionItemProps) {\r\n  return (\r\n    <li className={`transaction-item ${type}`}>\r\n      <div className=\"description\">{description}</div>\r\n\r\n      <div className=\"value\">\r\n        {type === 'income' ? '+ ' : '- '}\r\n        {currencyFormat(value)}\r\n      </div>\r\n\r\n      <button className=\"btn delete-btn\" onClick={() => onDeleteClick(id)}>\r\n        <CrossIcon />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport { TransactionItem };\r\n","import { TransactionItemProps, TransactionListType } from 'types';\r\nimport { TransactionItem } from './transaction-item';\r\nimport './transaction-list.scss';\r\n\r\ntype Props = {\r\n  list: TransactionListType;\r\n  onDeleteClick: TransactionItemProps['onDeleteClick'];\r\n};\r\n\r\nfunction TransactionList({ list, onDeleteClick }: Props) {\r\n  return (\r\n    <ul className=\"transaction-list\">\r\n      {list.map(({ id, description, value, type }) => (\r\n        <TransactionItem\r\n          key={id}\r\n          id={id}\r\n          type={type}\r\n          value={value}\r\n          description={description}\r\n          onDeleteClick={onDeleteClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport { TransactionList };\r\n","import './label.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction Label({ children }: Props) {\r\n  return <h3 className=\"label\">{children}</h3>;\r\n}\r\n\r\nexport default Label;\r\n","import * as React from 'react';\r\nimport { TransactionListType, Transaction } from 'types';\r\nimport Layout, { Top, Middle, Bottom } from 'components/layout';\r\nimport { Display } from 'components/display';\r\nimport { Form } from 'components/form';\r\nimport { TransactionList } from 'components/transaction-list';\r\nimport Label from 'components/label';\r\nimport { sum } from 'utils';\r\n\r\nconst initialTransactions: Transaction[] = [\r\n  { id: '1', type: 'income', description: 'Salary', value: 1000 },\r\n  { id: '2', type: 'income', description: 'Lottery', value: 1000 },\r\n  { id: '3', type: 'expense', description: 'Party', value: 500 },\r\n  { id: '4', type: 'expense', description: 'Cyberpunk', value: 500 },\r\n];\r\n\r\nfunction App() {\r\n  const [transactions, setTransactions] = React.useState<TransactionListType>(\r\n    initialTransactions\r\n  );\r\n\r\n  const addTransaction = (newTransaction: Transaction) => {\r\n    setTransactions(transactions.concat(newTransaction));\r\n  };\r\n  const removeTransaction = (transactionId: Transaction['id']) => {\r\n    setTransactions(transactions.filter((t) => t.id !== transactionId));\r\n  };\r\n\r\n  const incomeList = transactions.filter((t) => t.type === 'income');\r\n  const expensesList = transactions.filter((t) => t.type === 'expense');\r\n\r\n  const income = sum(incomeList.map((t) => t.value));\r\n  const expenses = sum(expensesList.map((t) => t.value));\r\n\r\n  return (\r\n    <Layout>\r\n      <Top>\r\n        <Display income={income} expenses={expenses} />\r\n      </Top>\r\n\r\n      <Middle>\r\n        <Form onSubmit={addTransaction} />\r\n      </Middle>\r\n\r\n      <Bottom>\r\n        <div className=\"income\">\r\n          <Label>Income</Label>\r\n          <TransactionList\r\n            list={incomeList}\r\n            onDeleteClick={removeTransaction}\r\n          />\r\n        </div>\r\n        <div className=\"expenses\">\r\n          <Label>Expenses</Label>\r\n          <TransactionList\r\n            list={expensesList}\r\n            onDeleteClick={removeTransaction}\r\n          />\r\n        </div>\r\n      </Bottom>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from 'app';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}